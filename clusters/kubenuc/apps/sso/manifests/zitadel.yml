---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: zitadel
  namespace: sso
spec:
  interval: 15m
  maxHistory: 20
  chart:
    spec:
      chart: zitadel
      version: "8.12.2"
      sourceRef:
        kind: HelmRepository
        name: zitadel-chart
        namespace: flux-system
      interval: 15m
  install:
    disableWait: true
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    disableWait: true
    remediation:
      retries: 5
  values:
    ingress:
      enabled: true
      className: "nginx"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      hosts:
        - host: test-sso.ddlns.net
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: zitadel-tls
          hosts:
            - test-sso.ddlns.net
    zitadel:
      initContainers:
        - name: check-db-ready
          image: postgres:16
          command: ["sh", "-c",
            "until pg_isready -U ${ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME} -h ${ZITADEL_DATABASE_POSTGRES_HOST} -p 5432;
            do echo waiting for database; sleep 2; done;"]
          env:
            - name: ZITADEL_DATABASE_POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: ZITADEL_DATABASE_POSTGRES_HOST
                  name: zitadel-db-credentials
            - name: ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sso-secrets
                  key: PGUSERNAME
        - name: init-db
          image: postgres:16
          imagePullPolicy: Always
          command: [ "sh", "-c", "
            DB_EXISTS=$(psql -U ${ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME} -h ${ZITADEL_DATABASE_POSTGRES_HOST} -tAc \"SELECT 1 FROM pg_database WHERE datname='${ZITADEL_DATABASE_POSTGRES_DATABASE}'\") ; \
            if [ \"$DB_EXISTS\" != \"1\" ]; then \
              psql -U ${ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME} -h ${ZITADEL_DATABASE_POSTGRES_HOST} -c \"CREATE DATABASE ${ZITADEL_DATABASE_POSTGRES_DATABASE};\" ; \
            fi ; \

            USER_EXISTS=$(psql -U ${ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME} -h ${ZITADEL_DATABASE_POSTGRES_HOST} -tAc \"SELECT 1 FROM pg_roles WHERE rolname='${ZITADEL_DATABASE_POSTGRES_USER_USERNAME}'\") ; \
            if [ \"$USER_EXISTS\" != \"1\" ]; then \
              psql -U ${ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME} -h ${ZITADEL_DATABASE_POSTGRES_HOST} -c \"CREATE USER ${ZITADEL_DATABASE_POSTGRES_USER_USERNAME} WITH ENCRYPTED PASSWORD '${ZITADEL_DATABASE_POSTGRES_USER_PASSWORD}';\" ; \
            fi ; \

            psql -U ${ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME} -h ${ZITADEL_DATABASE_POSTGRES_HOST} -c \"GRANT ALL PRIVILEGES ON DATABASE ${ZITADEL_DATABASE_POSTGRES_DATABASE} TO ${ZITADEL_DATABASE_POSTGRES_USER_USERNAME};\" ; \
            psql -U ${ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME} -h ${ZITADEL_DATABASE_POSTGRES_HOST} -d ${ZITADEL_DATABASE_POSTGRES_DATABASE} -c \"GRANT ALL ON SCHEMA public TO ${ZITADEL_DATABASE_POSTGRES_USER_USERNAME};\"
            "]
          env:
            - name: ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE
              value: disable
            - name: ZITADEL_DATABASE_POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: zitadel-db-credentials
                  key: ZITADEL_DATABASE_POSTGRES_HOST
            - name: ZITADEL_DATABASE_POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: zitadel-db-credentials
                  key: ZITADEL_DATABASE_POSTGRES_DATABASE
            - name: ZITADEL_DATABASE_POSTGRES_USER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: zitadel-db-credentials
                  key: ZITADEL_DATABASE_POSTGRES_USER_USERNAME
            - name: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zitadel-db-credentials
                  key: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
            - name: ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sso-secrets
                  key: PGUSERNAME
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: sso-secrets
                  key: PGPASSWORD
      masterkeySecretName: zitadel-master-secrets
      configmapConfig:
        ExternalSecure: true
        ExternalDomain: test-sso.ddlns.net
        TLS:
          Enabled: false
        Database:
          Postgres:
            MaxOpenConns: 20
            MaxIdleConns: 10
            MaxConnLifetime: 30m
            MaxConnIdleTime: 5m
    env:
      - name: ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE
        value: prefer
      - name: ZITADEL_DATABASE_POSTGRES_HOST
        valueFrom:
          secretKeyRef:
            name: zitadel-db-credentials
            key: ZITADEL_DATABASE_POSTGRES_HOST
      - name: ZITADEL_DATABASE_POSTGRES_PORT
        valueFrom:
          secretKeyRef:
            name: zitadel-db-credentials
            key: ZITADEL_DATABASE_POSTGRES_PORT
      - name: ZITADEL_DATABASE_POSTGRES_DATABASE
        valueFrom:
          secretKeyRef:
            name: zitadel-db-credentials
            key: ZITADEL_DATABASE_POSTGRES_DATABASE
      - name: ZITADEL_DATABASE_POSTGRES_USER_USERNAME
        valueFrom:
          secretKeyRef:
            name: zitadel-db-credentials
            key: ZITADEL_DATABASE_POSTGRES_USER_USERNAME
      - name: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: zitadel-db-credentials
            key: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
      - name: ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE
        value: prefer
      - name: ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME
        valueFrom:
          secretKeyRef:
            name: sso-secrets
            key: PGUSERNAME
      - name: ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sso-secrets
            key: PGPASSWORD
