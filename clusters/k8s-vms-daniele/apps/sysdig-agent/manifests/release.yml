---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sysdig-deploy
  namespace: sysdig-agent
spec:
  chart:
    spec:
      chart: sysdig-deploy
      version: ">=1.3.29"
  values:
    global:
      clusterConfig:
        name: "k8s-daniele-vms"
      sysdig:
        region: "us1"
      kspm:
        deploy: true

    kspmCollector:
      probes:
        initialDelay: 30

    agent:
      slim:
        resources:
          requests:
            cpu: 300m
            memory: 600Mi
          limits:
            cpu: 500m
            memory: 1Gi
      resourceProfile: custom
      resources:
        requests:
          cpu: 300m
          memory: 600Mi
        limits:
          cpu: 500m
          memory: 1Gi
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: "NoSchedule"
          key: "CriticalAddonsOnly"
          operator: "Equal"
          value: "true"
      sysdig:
        settings:
          tags: cluster:k8s-daniele-vms,location:Swiss
          cri:
            socket_path: /run/k3s/containerd/containerd.sock
          log:
            file_priority: warning
            console_priority: info
            event_priority: warning
      prometheus:
        file: true
        yaml:
          global:
            scrape_interval: 10s
          scrape_configs:
            - job_name: blackbox
              metrics_path: /probe
              params:
                module:
                - http_2xx
              relabel_configs:
              - source_labels:
                - __address__
                target_label: __param_target
              - source_labels:
                - __param_target
                target_label: instance
              - replacement: blackbox-prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115	# Blackbox hostname:port
                target_label: __address__
              static_configs:
              - targets:
                - https://harbor.ddlns.net
                labels:
                  kube_namespace_name: 'ciccio'
            - job_name: kubernetes-blackbox-services
              kubernetes_sd_configs:
              - role: service
              metrics_path: /probe
              params:
                module:
                - http_2xx
              relabel_configs:
              - action: keep
                regex: true
                source_labels:
                - __meta_kubernetes_service_annotation_prometheus_io_probe
              - source_labels:
                - __address__
                target_label: __param_target
              - replacement: blackbox-prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115	# Blackbox hostname:port
                target_label: __address__
              - source_labels:
                - __param_target
                target_label: instance
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels:
                - __meta_kubernetes_namespace
                target_label: kube_namespace_name
              - source_labels:
                - __meta_kubernetes_service_name
                target_label: kube_service_name
            - job_name: kubernetes-blackbox-test
              kubernetes_sd_configs:
              - role: service
              metrics_path: /probe
              params:
                module:
                - http_2xx
              relabel_configs:
              - action: keep
                regex: true
                source_labels:
                - __meta_kubernetes_service_annotation_prometheus_io_probe
              - source_labels:
                - __address__
                target_label: __param_target
              - replacement: blackbox-prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115	# Blackbox hostname:port
                target_label: __address__
              - source_labels:
                - __param_target
                target_label: instance
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels:
                - __meta_kubernetes_service_name
                target_label: kube_service_name

    nodeAnalyzer:
      nodeAnalyzer:
        tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
          - effect: "NoSchedule"
            key: "CriticalAddonsOnly"
            operator: "Equal"
            value: "true"
        imageAnalyzer:
          extraVolumes:
            volumes:
              - name: socketpath
                hostPath:
                  path: /run/k3s/containerd/containerd.sock
                  type: ""
        benchmarkRunner:
          deploy: false
        runtimeScanner:
          deploy: false
          resources:
            limits:
              cpu: 300m
          settings:
            eveEnabled: true
          extraMounts:
            - name: socketpath
              mountPath: /var/run/containerd/containerd.sock
        hostScanner:
          deploy: true
      secure:
        vulnerabilityManagement:
          newEngineOnly: true

    rapidResponse:
      enabled: true

    clusterScanner:
      enabled: true
      eveEnabled: true
      scannerMode: "local"
      replicaCount: 1
      runtimeStatusIntegrator:
        env:
          USE_MAINDB_V2: "true"
      imageSbomExtractor:
        env:
          USE_MAINDB_V2: "true"
