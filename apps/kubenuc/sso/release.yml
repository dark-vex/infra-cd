---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: sso
spec:
  interval: 15m
  maxHistory: 20
  chart:
    spec:
      chart: authentik
      sourceRef:
        kind: HelmRepository
        name: goauthentik-chart
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    dbCheck:
      name: check-db-ready
      image: postgres:15
      command: ["sh", "-c", 
        "until pg_isready -h ${AUTHENTIK_POSTGRESQL__HOST} -p 5432; 
        do echo waiting for database; sleep 2; done;"]
    initContainers:
      init-db:
        name: init-db
        image: postgres:15
        imagePullPolicy: Always
        command: ["psql", "-U", "${PGUSERNAME}", "-h", "${AUTHENTIK_POSTGRESQL__HOST}", "--command"]
        args:
        - |
          CREATE DATABASE authentik;
          CREATE USER authentik WITH ENCRYPTED PASSWORD '${AUTHENTIK_POSTGRESQL__PASSWORD}';
          GRANT ALL PRIVILEGES ON DATABASE authentik TO authentik;
        env:
          - name: AUTHENTIK_POSTGRESQL__HOST
            valueFrom:
              secretKeyRef:
                key: PG_HOST
                name: sso-secrets
          - name: AUTHENTIK_POSTGRESQL__PASSWORD
            valueFrom:
              secretKeyRef:
                key: PG_PASS
                name: sso-secrets
          - name: PGUSERNAME
            valueFrom:
              secretKeyRef:
                key: PGUSERNAME
                name: sso-secrets
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                key: PGPASSWORD
                name: sso-secrets

    authentik:
      # This sends anonymous usage-data, stack traces on errors and
      # performance data to sentry.io, and is fully opt-in
      error_reporting:
        enabled: false
    
    envValueFrom:
      PG_PASS:
        secretKeyRef:
          key: PG_PASS
          name: sso-secrets
      AUTHENTIK_SECRET_KEY:
        secretKeyRef:
          key: AUTHENTIK_SECRET_KEY
          name: sso-secrets
      AUTHENTIK_POSTGRESQL__HOST:
        secretKeyRef:
          key: PG_HOST
          name: sso-secrets
      AUTHENTIK_POSTGRESQL__PASSWORD:
        secretKeyRef:
          key: PG_PASS
          name: sso-secrets

    ingress:
      ingressClassName: nginx
      enabled: true
      hosts:
        - host: sso.ddlns.net
          paths:
            - path: "/"
              pathType: Prefix
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      tls:
        - secretName: sso-tls
          hosts:
            - sso.ddlns.net
    
    postgresql:
      enabled: false

    redis:
      enabled: true
